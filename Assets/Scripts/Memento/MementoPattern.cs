using UnityEngine;

// 메멘토 패턴

// 0. 정의
// => 객체의 내부 상태를 캡슐화하여 저장하고 필요 시 해당 상태로 복원 할 수 있음
// => 객체의 상태를 외부에 노출하지 않고 저장 및 복원 할 수 있음

// 1. 구성
// => 오브젝트 상태 : 오브젝트의 상태를 관리하며 현재 상태를 특정 메멘토 상태에 저장하고 나중에 특정 메멘토 상태로 복원 할 수 있음
// => 메멘토 상태 : 오브젝트의 특정 시점 상태를 저장
// => 복원 상태 : 오브젝트의 특정 시점 상태를 갖는 메멘토 상태를 관리하며 필요 시 오브젝트의 상태를 해당 메멘토 상태로 복원

// 2. 장점
// => 상태 복원 기능 제공 : 객체의 상태를 특정 시점으로 되돌릴 수 있음
// => 정보 은닉 : 객체의 내부 상태가 외부에 노출되지 않음
// => Undo 기능 구현 : 실행 취소 기능을 쉽게 구현 할 수 있음

// 3. 게임
// => 플레이어의 상태를 저장하고 특정 시점으로 되돌릴 수 있음 : 체력, 위치, 아이템
// => 특정 이벤트 발생 시 이전 상태로 돌아가는 기능을 구현할 수 있음
public class MementoPattern : MonoBehaviour
{
    private void Start()
    {
        // 오브젝트 상태 초기화
        ObjectState o = new ObjectState();
        o.State = "On";

        // 복원 상태가 갖는 메멘토 상태 초기화
        RestoreState r = new RestoreState();
        r.Memento = o.CreateMemento();

        // 오브젝트 상태 변경
        o.State = "Off";

        // 메멘토 상태로 복원
        o.RestoreMement(r.Memento);
    }
}
